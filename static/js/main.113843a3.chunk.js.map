{"version":3,"sources":["components/Menu.js","components/Learn.js","components/Options.js","benchmarks/examples.js","components/Try.js","components/About.js","App.js","index.js"],"names":["Menu","selected","onSelectedChange","options","converter","require","renderedMenu","map","option","activate","value","className","onClick","toWords","length","Learn","toggle","checked","renderAbstractionBounds","abstractionActive","onAbstractionLowerBoundChange","onAbstractionUpperBoundChange","type","placeholder","onChange","e","target","Options","onAbstractionChange","onParallelEnableChange","onReportInstabilityChange","onEnableConstraintsChange","tabIndex","examples","ex","seesaw_api","axios","create","baseURL","onStartClicked","input","setOutput","abstractionLowerBound","abstractionUpperBound","parallelEnabled","reportInstability","enableConstraints","a","get","params","program","abstraction","abstraction_lower_bound","abstraction_upper_bound","parallel","report_instability","enable_constraints","timeout","response","data","Try","useState","currentIndex","setCurrentIndex","setInput","output","setAbstractionActive","setAbstractionLowerBound","setAbstractionUpperBound","setParallelEnabled","setReportInstability","setEnableConstraints","spellCheck","Math","max","onPrevClicked","min","onNextClicked","About","rendering","App","setSelected","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.113843a3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Menu = ({ selected, onSelectedChange, options }) => {\n    var converter = require('number-to-words');\n\n    const renderedMenu = options.map((option) => {\n        let activate = \"\"\n        if(option.value === selected.value) {\n            activate = \"active\"\n        }\n\n        return (\n            <a\n                key={option.value}\n                className={activate+\" item\"}\n                onClick={() => onSelectedChange(option)}\n            >\n                {option.value}\n            </a>\n        );\n    });\n\n    return (\n        <div className={`ui ${converter.toWords(options.length)} item menu`}>\n            {renderedMenu}\n        </div>\n    );\n};\n\nexport default Menu;","import React from 'react';\n\nconst Learn = () => {\n    return (\n        <div>\n            <h1>Instructions</h1>\n        </div>\n    );\n}\n\nexport default Learn;","import React from 'react'\n\nfunction toggle(checked) {\n    return !checked;\n}\n\nfunction renderAbstractionBounds(abstractionActive,\n                                 onAbstractionLowerBoundChange,\n                                 onAbstractionUpperBoundChange, ) {\n    if (!abstractionActive) {\n        return\n    } else {\n        return (\n            <div className=\"three wide column\">\n                <div className=\"ui right corner labeled input\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Lower window\"\n                        onChange={(e) => onAbstractionLowerBoundChange(e.target.value)}\n                    />\n                    <div className=\"ui right corner label\">\n                        <i className=\"angle down icon\"></i>\n                    </div>\n                </div>\n                <div className=\"ui right corner labeled input\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Upper window\"\n                        onChange={(e) => onAbstractionUpperBoundChange(e.target.value)}\n                    />\n                    <div className=\"ui right corner label\">\n                        <i className=\"angle up icon\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Options = ({ abstractionActive,\n                     onAbstractionChange,\n                     onAbstractionLowerBoundChange,\n                     onAbstractionUpperBoundChange,\n                     onParallelEnableChange,\n                     onReportInstabilityChange,\n                     onEnableConstraintsChange }) => {\n\n\n    return (\n        <div className=\"ui form\">\n            <h2 className=\"ui header\">\n                <i className=\"settings icon\"></i>\n                <div className=\"content\">\n                    Options:\n                </div>\n            </h2>\n            <div className=\"grouped fields\">\n                Enable additional options below:\n                <div className=\"ui grid\">\n                    <div className=\"three wide column\">\n                        <div className=\"field\">\n                            <div className=\"ui toggle checkbox\">\n                                <input\n                                    type=\"checkbox\"\n                                    tabIndex=\"0\"\n                                    onChange={() => onAbstractionChange(toggle)}\n                                />\n                                <label>Abstraction</label>\n                            </div>\n                        </div>\n                    </div>\n                    {renderAbstractionBounds(\n                        abstractionActive,\n                        onAbstractionLowerBoundChange,\n                        onAbstractionUpperBoundChange, )}\n\n                </div>\n                <div className=\"field\">\n                    <div className=\"ui toggle checkbox\">\n                        <input\n                            type=\"checkbox\"\n                            tabIndex=\"1\"\n                            onChange={() => onParallelEnableChange(toggle)}\n                        />\n                        <label>Parallel</label>\n                    </div>\n                </div>\n                <div className=\"field\">\n                    <div className=\"ui toggle checkbox\">\n                        <input\n                            type=\"checkbox\"\n                            tabIndex=\"2\"\n                            onChange={() => onReportInstabilityChange(toggle)}\n                        />\n                        <label>Report Instability</label>\n                    </div>\n                </div>\n                {/*<div className=\"field\">*/}\n                {/*    <div className=\"ui toggle checkbox\">*/}\n                {/*        <input*/}\n                {/*            type=\"checkbox\"*/}\n                {/*            tabIndex=\"3\"*/}\n                {/*            onChange={() => onEnableConstraintsChange(toggle)}*/}\n                {/*        />*/}\n                {/*        <label>Enable Constraints</label>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n            </div>\n        </div>\n    );\n}\n\nexport default Options;","export const examples = [\n\t{ ex: \"INPUTS {\\n\" +\n\t\t\t\"\\tx1 fl64 : (0.01, 1.0)\\t;\\n\" +\n\t\t\t\"\\tx2 fl64 : (0.01, 1.0)\\t;\\n\" +\n\t\t\t\"\\tx3 fl64 : (0.01, 1.0)\\t;\\n\" +\n\t\t\t\"\\tx4 fl64 : (0.01, 1.0)\\t;\\n\" +\n\t\t\t\"}\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"OUTPUTS {\\n\" +\n\t\t\t\"\\ty ;\\n\" +\n\t\t\t\"}\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"## New Addition of required constraints on inputs\\n\" +\n\t\t\t\"## Precedence &&, ||\\n\" +\n\t\t\t\"## Separate constraints => &&\\n\" +\n\t\t\t\"REQUIRES {\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\tRSC1 : (x1*x3 < x2) || (x2 >= x4) ;\\n\" +\n\t\t\t\"\\t#RSC2 : (x4 < x3+x1) && (x4+x2 < x3*x3) || (x2 < x4) ;\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"}\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"EXPRS {\\n\" +\n\t\t\t\"\\th rnd64 = (x2/x1) + x3 ;\\n\" +\n\t\t\t\"\\tg rnd64 = x1 + x1*x2 ;\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\tif ( x1-x2 < 0.4 ) then\\n\" +\n\t\t\t\"\\t\\tg rnd64 = 1 + 1/g ;\\n\" +\n\t\t\t\"\\t\\th rnd64 = x3 + x4 ;\\n\" +\n\t\t\t\"\\telse\\n\" +\n\t\t\t\"\\t\\tif (( x3*x3 > 0.25 ) && (x4*h <= x1*x1)) then\\n\" +\n\t\t\t\"\\t\\t\\tg rnd64 = h + x2*x3 ;\\n\" +\n\t\t\t\"\\t\\tendif\\n\" +\n\t\t\t\"\\tendif\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\ty rnd64 = g + sin(x4) ;\\n\" +\n\t\t\t\"}\\n\"\n\t},\n\t{\n\t\tex: \"INPUTS\\t{ m0 fl64 :(-1.0, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  m1 fl64 :(-1.0, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  m2 fl64 :(-1.0, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  w0 fl64 :(0.00001, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  w1 fl64 :(0.00001, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  w2 fl64 :(0.00001, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  a0 fl64 :(0.00001, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  a1 fl64 :(0.00001, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t  a2 fl64 :(0.00001, 1.0) ;\\n\" +\n\t\t\t\"\\t\\t }\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"OUTPUTS { r ; }\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"EXPRS {\\n\" +\n\t\t\t\"\\t\\te1 rnd64 = (((w2 * (0.0 - m2)) * (-3.0 * ((1.0 * (a2/w2)) * (a2/w2)))) * 1.0) ;\\n\" +\n\t\t\t\"\\t\\te2 rnd64 = (((w1 * (0.0 - m1)) * (-3.0 *((1.0 * (a1/w1)) * (a1/w1)))) * 1.0) ;\\n\" +\n\t\t\t\"\\t\\te3 rnd64 = (((w0 * (0.0 - m0)) * (-3.0 * ((1.0 * (a0/w0)) * (a0/w0)))) * 1.0) ;\\n\" +\n\t\t\t\"\\t\\te4 rnd64 = (((w0 * (3.0 - m0)) * (3.685 * ((1.0 * (a1/w0)) * (a0/w2)))) * 1.0) ;\\n\" +\n\t\t\t\"\\t\\tr rnd64 = (0.0 + (e1 + (e2 + (e3 + 0.0)))) ;\\n\" +\n\t\t\t\"\\t  }\\n\"\n\t},\n\t{\n\t\tex: \"\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"INPUTS {\\n\" +\n\t\t\t\"\\tax\\tfl64 : (-3.657 - 0.5, -3.657 + 0.5); ay\\tfl64 : (5.43 - 0.5, 5.43 + 0.5); az\\tfl64 : (-6.23 - 0.5, -6.23 + 0.5);\\n\" +\n\t\t\t\"\\tbx\\tfl64 : (7.893 - 0.5, 7.893 + 0.5); by\\tfl64 : (-6.67 - 0.5, -6.67 + 0.5); bz\\tfl64 : (8.92 - 0.5, 8.92 + 0.5);\\n\" +\n\t\t\t\"\\tcx\\tfl64 : (4.441 - 0.5, 4.441 + 0.5); cy\\tfl64 : (8.34 - 0.5, 8.34 + 0.5); cz\\tfl64 : (-3.35 - 0.5, -3.35 + 0.5);\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\tpx\\tfl64 : (-2 , -2); py\\tfl64 : (3  , 3 ); pz\\tfl64 : (5  , 5 );\\n\" +\n\t\t\t\"}\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"OUTPUTS {\\n\" +\n\t\t\t\"\\t#ood; \\n\" +\n\t\t\t\"\\t#nu ;\\n\" +\n\t\t\t\"\\tu ;\\n\" +\n\t\t\t\"\\t#w ;\\n\" +\n\t\t\t\"\\t#w ;\\n\" +\n\t\t\t\"\\t#mz ;\\n\" +\n\t\t\t\"}\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"EXPRS {\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\tv0_x = bx - ax ; v0_y = by - ay ; v0_z = bz - az ;\\n\" +\n\t\t\t\"\\tv1_x = cx - ax ; v1_y = cy - ay ; v1_z = cz - az ;\\n\" +\n\t\t\t\"\\tv2_x = px - ax ; v2_y = py - ay ; v2_z = pz - az ;\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\td00 = v0_x*v0_x + v0_y*v0_y + v0_z*v0_z ;\\n\" +\n\t\t\t\"\\td01 = v0_x*v1_x + v0_y*v1_y + v0_z*v1_z ;\\n\" +\n\t\t\t\"\\td11 = v1_x*v1_x + v1_y*v1_y + v1_z*v1_z ;\\n\" +\n\t\t\t\"\\td20 = v2_x*v0_x + v2_y*v0_y + v2_z*v0_z ;\\n\" +\n\t\t\t\"\\td21 = v2_x*v1_x + v2_y*v1_y + v2_z*v1_z ;\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\tdenom = d00*d11 - d01*d01 ;\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"\\tv = (d11 * d20 - d01 * d21) / denom ;\\n\" +\n\t\t\t\"\\tw = (d00 * d21 - d01 * d20) / denom ;\\n\" +\n\t\t\t\"\\tu = 1.0 - v - w;\\n\" +\n\t\t\t\"\\n\" +\n\t\t\t\"}\\n\"\n\t}\n];\n\n","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './Try.css'\nimport Options from './Options';\nimport { examples } from '../benchmarks/examples'\nconst API_URL = 'https://ec2-54-172-154-66.compute-1.amazonaws.com'\n\nconst seesaw_api = axios.create({\n    baseURL: API_URL,\n})\n\nfunction onNextClicked(e, setCurrentIndex, currentIndex, setInput) {\n    setCurrentIndex(Math.min(examples.length-1, currentIndex+1));\n    // console.log(currentIndex)\n    setInput(examples[currentIndex].ex)\n    // console.log(\"Clicked on Next\")\n}\n\nfunction onPrevClicked(e, setCurrentIndex, currentIndex, setInput) {\n    setCurrentIndex(Math.max(0, currentIndex-1));\n    // console.log(currentIndex)\n    setInput(examples[currentIndex].ex)\n    // console.log(\"Clicked on Prev\")\n}\n\nconst onStartClicked = async (e,\n                              input,\n                              setOutput,\n                              abstractionActive,\n                              abstractionLowerBound,\n                              abstractionUpperBound,\n                              parallelEnabled,\n                              reportInstability,\n                              enableConstraints) => {\n    const response = await seesaw_api.get('/seesaw', {\n        params : {\n            program: input,\n            abstraction : abstractionActive,\n            abstraction_lower_bound : abstractionLowerBound,\n            abstraction_upper_bound : abstractionUpperBound,\n            parallel : parallelEnabled,\n            report_instability : reportInstability,\n            enable_constraints : enableConstraints,\n        },\n    }, { timeout: 120000});\n\n    // console.log(response);\n    setOutput(response.data);\n}\n\nconst Try = () => {\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [input, setInput] = useState(examples[currentIndex].ex);\n    const [output, setOutput] = useState(\"\");\n    const [abstractionActive, setAbstractionActive] = useState(false);\n    const [abstractionLowerBound, setAbstractionLowerBound] = useState(10);\n    const [abstractionUpperBound, setAbstractionUpperBound] = useState(20);\n    const [parallelEnabled, setParallelEnabled] = useState(false)\n    const [reportInstability, setReportInstability] = useState(false);\n    const [enableConstraints, setEnableConstraints] = useState(false);\n\n    // console.log(abstractionActive);\n    return (\n        <div className=\"ui form\">\n            <div className=\"field\">\n                <div className=\"ui grid\">\n                    <div className=\"eight wide column\">\n                        <h2 className=\"ui header\">\n                            <i className=\"keyboard icon\"></i>\n                            <div className=\"content\">\n                                Input:\n                            </div>\n                        </h2>\n                        <textarea\n                            spellCheck=\"false\"\n                            placeholder=\"Seesaw program\"\n                            value={input}\n                            onChange={(e) => setInput(e.target.value)}\n                        >\n                        </textarea>\n                    </div>\n                    <div className=\"eight wide column\">\n                        <h2 className=\"ui header\">\n                            <i className=\"clipboard outline icon\"></i>\n                            <div className=\"content\">\n                                Output:\n                            </div>\n                        </h2>\n                        <textarea\n                            spellCheck=\"false\"\n                            placeholder=\"Output\"\n                            value={output}\n                            onChange={(e) => setOutput(e.target.value)}\n                        >\n                        </textarea>\n                    </div>\n                </div>\n                <div className=\"ui three column grid\">\n                    <div className=\"column\">\n                        <button\n                            className=\"ui large button\"\n                            onClick={(e) => onStartClicked(e,\n                                input,\n                                setOutput,\n                                abstractionActive,\n                                abstractionLowerBound,\n                                abstractionUpperBound,\n                                parallelEnabled,\n                                reportInstability,\n                                enableConstraints)}\n                        >\n                            Start\n                        </button>\n                    </div>\n                    <div className=\"center aligned column\">\n                        <div className=\"ui large buttons\">\n                            <button\n                                className=\"ui button\"\n                                onClick={(e)=>onPrevClicked(e, setCurrentIndex, currentIndex, setInput)}\n                            >\n                                Prev\n                            </button>\n                            <div className=\"or\"></div>\n                            <button\n                                className=\"ui button\"\n                                onClick={(e)=>onNextClicked(e, setCurrentIndex, currentIndex, setInput)}\n                            >\n                                Next\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"column\">\n                        <button className=\"ui large right floated button\">Clear</button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"field\">\n                <Options\n                    abstractionActive={abstractionActive}\n                    onAbstractionChange={setAbstractionActive}\n                    onAbstractionLowerBoundChange={setAbstractionLowerBound}\n                    onAbstractionUpperBoundChange={setAbstractionUpperBound}\n                    onParallelEnableChange={setParallelEnabled}\n                    onReportInstabilityChange={setReportInstability}\n                    onEnableConstraintsChange={setEnableConstraints}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Try;","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>About</div>\n    );\n};\n\nexport default About;","import React, {useState} from 'react';\nimport Menu from './components/Menu';\nimport Learn from './components/Learn';\nimport Try from './components/Try';\nimport './App.css'\nimport About from \"./components/About\";\n\nconst options = [\n    {\n        value: 'About',\n    },\n    {\n        value: 'Try',\n    },\n    {\n        value: 'Learn',\n    },\n];\n\nfunction rendering( selected ) {\n    switch (selected.value) {\n        case 'About':\n            return <About />\n        case 'Try':\n            return <Try />;\n        case 'Learn':\n            return <Learn />\n        default:\n            return <div>No view selected to render</div>\n    }\n};\n\nconst App = () => {\n    const [selected, setSelected] = useState(options[1])\n\n    return (\n        <div className=\"page\">\n            <h1 className=\"ui center aligned icon header\">\n                <i className={`bug massive icon orange`} />\n                <p className=\"title\" >Seesaw</p>\n            </h1>\n            <Menu\n                selected={selected}\n                onSelectedChange={setSelected}\n                options={options}\n            />\n            {rendering(selected)}\n        </div>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);"],"sourceRoot":""}